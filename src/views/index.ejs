<!DOCTYPE html>
<html lang="en">
  <head>
      
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Credentials</title>
  <style>
    .container {
      padding: 5px;
    }
  </style>
  </head>
  <body>
    <div>
        <div class="container">
          <p id="emaillable">Email</p>
          <input type="text" name="email" value="admin@mail.com" id="email" />
        </div>
        <div class="container">
          <p for="password">Password</p>
          <input type="password" name="password" value="password" id="password" />
        </div>
        <div class="container">
          <button id="submit">
            <p>login</p>
          </button>
        </div>
      </form>
    </div>
  </body>


  <script>
      const submit = document.querySelector('#submit')
      submit.addEventListener('click',authenticate)

    function authenticate(e) {
      const email = document.querySelector('#email')
      const password = document.querySelector('#password')
    if(email.value.length === 0 || password.value.length === 0){
        alert('input required')
        return
    }
    // send query to backend
    requestServer({
        email:email.value,
        password:password.value
    }).then(d=>{
        console.log('s',d);
    }).catch(err =>{
        console.log(err);
    })

      e.preventDefault();
      return false
    }

    function requestServer(payload){
        return new Promise((resolve,reject)=>{
            let options = {
                method:"POST",
                headers: {'Content-Type': 'application/json'},
                body:JSON.stringify(payload)
        }
        fetch("/auth/authenticate", options)
        .then(response =>{
            if(!response.ok){
                reject('invalid response')
                return
            }
            response.json().then(data =>{
                resolve(data)
            })
            .catch(err =>{
                reject(err)
            })
        })
        .catch(e=>{
            reject(e)
        })
  
        })
    }

  </script>


</html>
